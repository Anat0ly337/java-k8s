package com.ll.exam.app10.API;import java.io.IOException;import java.util.Map;import java.util.Optional;import java.util.Random;import java.util.Set;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.DeleteMapping;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.PutMapping;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.bind.annotation.RestController;import org.springframework.web.multipart.MultipartFile;@RestController@RequestMapping("/api/song")public class SongService {    private SongRepo songRepo;    @GetMapping("/{id}")    public ResponseEntity<?> getMp3FileById(@PathVariable Long id) {        return songRepo.findById(id)            .map(ResponseEntity::ok)            .orElse(ResponseEntity.notFound().build());    }    @PostMapping()    public ResponseEntity<?> uploadMp3File(Song song) {        try {            songRepo.save(new Song("", "", "", "", "", 1999));            return new ResponseEntity<>(HttpStatus.CREATED);        } catch (Exception e) {            e.printStackTrace();            return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);        }    }    @PutMapping("/{id}")    public ResponseEntity<?> updateMp3File(@PathVariable Long id, Song song)        throws IOException {        song.setId(id);        return Optional.of(songRepo.save(song))            .map(ResponseEntity::ok)            .orElse(ResponseEntity.badRequest().build());    }    @DeleteMapping("resources/{id}")    public ResponseEntity<?> deleteMp3File(@PathVariable Long id) {        songRepo.deleteById(id);        return new ResponseEntity<>(Set.of(id), HttpStatus.OK);    }}